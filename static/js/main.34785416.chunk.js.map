{"version":3,"sources":["reportWebVitals.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/utils/displayDate.js","app/components/common/comment.jsx","app/utils/validator.js","app/components/common/form/selectField.jsx","app/components/common/form/textAreaField.jsx","app/components/addCommentForm.jsx","app/components/common/commentsList.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/common/form/textField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/backButton.jsx","app/components/page/editUserPage/editUserPage.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/components/ui/navBar.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","email","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","id","find","user","update","data","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","console","log","Quality","className","Qualities","map","qual","displayDate","date","parseInt","dateNow","getFullYear","getDate","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","Comment","comment","created","onRemove","useState","setUser","isLoading","setIsLoading","useEffect","Api","src","substring","alt","width","height","onClick","validator","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","SelectField","label","onChange","defaultOption","options","optionsArray","Array","isArray","Object","values","htmlFor","target","disabled","option","TextAreaField","defaultProps","type","addCommentForm","onSubmit","initialData","setData","setUsers","setErrors","api","usersList","keys","handleChange","prevState","validatorConfig","isRequired","e","preventDefault","CommentsList","setComments","handleRemoveComment","item","UserPage","history","useHistory","role","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","SearchStatus","number","lastOne","Number","slice","indexOf","renderPhrase","BookMark","status","rest","TableBody","columns","renderContent","column","component","get","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","UserTable","onToggleBookMark","onDelete","to","delete","UsersListPage","setCurrentPage","setProfession","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","count","usersCrop","pageNumber","startIndex","splice","paginate","orderBy","placeholder","newArray","pageIndex","Users","useParams","TextField","showPassword","setShowPassword","RadioField","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","goBack","EditUserPage","setQualities","getProfessionById","prof","getQualities","elements","qualitiesArray","elem","quality","transformData","professionsList","professionName","qualitiesList","optionName","isEmail","isValid","CheckBoxField","LoginForm","password","stayOn","isCapitalSymbol","isContainDigit","min","RegisterForm","licence","Login","formType","setFormType","toggleFormType","params","Main","NavBar","App","exact","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.34785416.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        email: \"Jony7351@tw.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        email: \"white4571@twipet.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        email: \"bob007@tw.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        email: \"green7311@fam.biz\",\n        sex: \"female\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        email: \"mindgames6878@phis.tech\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        email: \"mindes000@phis.tech\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        email: \"gov1903@phis.tech\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        email: \"electro@underground.tech\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        email: \"mono@super.com\",\n        sex: \"female\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        email: \"ratatatata@underground.com\",\n        sex: \"male\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        email: \"joe@trib.com\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        email: \"superstar@star.com\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForUser = (userId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === userId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            console.log(id);\n            console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForUser,\n    add,\n    remove\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n    users,\n    professions,\n    qualities,\n    comments\n};\nexport default API;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ color, name, _id }) => {\n    return (\n        <span className={\"badge m-1 bg-\" + color}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\n\nconst QualitiesList = ({ qualities }) => {\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","export function displayDate(data) {\r\n    const date = new Date(parseInt(data));\r\n    const dateNow = new Date();\r\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\r\n    if (yearDif === 0) {\r\n        const dayDif = dateNow.getDate() - date.getDate();\r\n        if (dayDif === 0) {\r\n            const hourDif = dateNow.getHours() - date.getHours();\r\n            if (hourDif === 0) {\r\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\r\n\r\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\r\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\r\n                if (minutesDif >= 10 && minutesDif < 30) {\r\n                    return \"10 минут назад\";\r\n                }\r\n                return \"30 минут назад\";\r\n            }\r\n            return `${date.getHours()}:${date.getMinutes()}`;\r\n        }\r\n\r\n        return `${date.getDate()} ${date.toLocaleString(\"default\", {\r\n            month: \"long\"\r\n        })}`;\r\n    }\r\n    return (\r\n        date.getDate() + \".\" + (date.getMonth() + 1) + \".\" + date.getFullYear()\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../utils/displayDate\";\nimport Api from \"../../api\";\nconst Comment = ({\n    comment,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const [user, setUser] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    useEffect(() => {\n        setIsLoading(true);\n        Api.users.getById(userId).then((data) => {\n            setUser(data);\n            setIsLoading(false);\n        });\n    }, []);\n\n    return (\n        <>\n            {isLoading ? (\n                \"Loading ...\"\n            ) : (\n                <div className=\"bg-light card-body  mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"d-flex flex-start \">\n                                <img\n                                    src={`https://avatars.dicebear.com/api/avataaars/${(\n                                        Math.random() + 1\n                                    )\n                                        .toString(36)\n                                        .substring(7)}.svg`}\n                                    className=\"rounded-circle shadow-1-strong me-3\"\n                                    alt=\"avatar\"\n                                    width=\"65\"\n                                    height=\"65\"\n                                />\n                                <div className=\"flex-grow-1 flex-shrink-1\">\n                                    <div className=\"mb-4\">\n                                        <div className=\"d-flex justify-content-between align-items-center\">\n                                            {user && user.name}\n                                            <p className=\"mb-1 \"></p>\n                                            <span className=\"small\">\n                                                {displayDate(created)}\n                                            </span>\n                                            <button\n                                                className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                                onClick={() => onRemove(id)}\n                                            >\n                                                <i className=\"bi bi-x-lg\"></i>\n                                            </button>\n                                        </div>\n                                        <p className=\"small mb-0\">{comment}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\nComment.propTypes = {\n    comment: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string,\n    item: PropTypes.object\n};\nexport default Comment;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray.length > 0 &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../api\";\r\nimport { validator } from \"../utils/validator\";\r\nimport SelectField from \"./common/form/selectField\";\r\nimport TextAreaField from \"./common/form/textAreaField\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function addCommentForm({ onSubmit }) {\r\n    const initialData = { userId: \"\", content: \"\" };\r\n    const [data, setData] = useState(initialData);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [users, setUsers] = useState();\r\n    const [errors, setErrors] = useState({});\r\n    useEffect(() => {\r\n        api.users.fetchAll().then(setUsers);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (typeof users !== \"undefined\") {\r\n            setIsLoading(true);\r\n        }\r\n    }, [users]);\r\n    const usersList =\r\n        users &&\r\n        Object.keys(users).map((userId) => ({\r\n            label: users[userId].name,\r\n            value: users[userId]._id\r\n        }));\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const clearForm = () => {\r\n        setData(initialData);\r\n        setErrors({});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        onSubmit(data);\r\n        clearForm();\r\n    };\r\n    const validatorConfig = {\r\n        content: {\r\n            isRequired: {\r\n                message: \"Комментарий обязателен для заполнения\"\r\n            }\r\n        },\r\n        _id: {\r\n            isRequired: {\r\n                message: \"Обязательно выберите пользователя\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isLoading && Object.keys(users).length > 0 ? (\r\n                <form onSubmit={handleSubmit}>\r\n                    <SelectField\r\n                        label=\"Выбери пользователя\"\r\n                        options={usersList}\r\n                        name=\"userId\"\r\n                        onChange={handleChange}\r\n                        value={data.userId}\r\n                        defaultOption=\"Выберите пользователя\"\r\n                        error={errors.userId}\r\n                    />\r\n\r\n                    <TextAreaField\r\n                        label=\"Комментарий\"\r\n                        name=\"content\"\r\n                        value={data.content}\r\n                        onChange={handleChange}\r\n                        error={errors.content}\r\n                    />\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <button className=\"btn btn-primary\">\r\n                            Опубликовать\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            ) : (\r\n                \"Loading...\"\r\n            )}\r\n        </div>\r\n    );\r\n}\r\naddCommentForm.propTypes = {\r\n    onSubmit: PropTypes.func\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../api\";\nimport Comment from \"./comment\";\nimport AddCommentForm from \"../addCommentForm\";\nconst CommentsList = ({ userId }) => {\n    const [comments, setComments] = useState();\n    useEffect(() => {\n        api.comments\n            .fetchCommentsForUser(userId)\n            .then((data) => setComments(data));\n    }, []);\n    const handleRemoveComment = (id) => {\n        api.comments\n            .remove(id)\n            .then((id) => setComments(comments.filter((x) => x._id !== id)));\n    };\n    const handleSubmit = (data) => {\n        console.log(data);\n        api.comments\n            .add({ ...data, pageId: userId })\n            .then((data) => setComments([...comments, data]));\n        console.log(\"comments\", comments);\n    };\n    if (comments) {\n        return (\n            <>\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <div className=\"card mb-2\">\n                            <div className=\"card-body \">\n                                <AddCommentForm onSubmit={handleSubmit} />\n                            </div>\n                        </div>\n                        {comments.map((item) => (\n                            <Comment\n                                key={item._id}\n                                {...item}\n                                onRemove={handleRemoveComment}\n                            />\n                        ))}\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\nCommentsList.propTypes = {\n    userId: PropTypes.string.isRequired\n};\nexport default CommentsList;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../api\";\nimport Qualities from \"../../ui/qualities\";\nimport { useHistory } from \"react-router-dom\";\nimport CommentsList from \"../../common/commentsList\";\n\nconst UserPage = ({ userId }) => {\n    const [user, setUser] = useState();\n    const history = useHistory();\n    useEffect(() => {\n        api.users.getById(userId).then((data) => setUser(data));\n    }, []);\n    const handleClick = () => {\n        history.push(`/users/${user._id}/edit`);\n    };\n\n    if (user) {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row gutters-sm\">\n                        <div className=\"col-md-4 mb-3\">\n                            <div className=\"card mb-3\">\n                                <div className=\"card-body\">\n                                    <button\n                                        className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                                        type=\"button\"\n                                        onClick={handleClick}\n                                    >\n                                        <i className=\"bi bi-gear\"></i>\n                                    </button>\n                                    <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                                        <img\n                                            src={`https://avatars.dicebear.com/api/avataaars/${(\n                                                Math.random() + 1\n                                            )\n                                                .toString(36)\n                                                .substring(7)}.svg`}\n                                            className=\"rounded-circle shadow-1-strong me-3\"\n                                            alt=\"avatar\"\n                                            width=\"65\"\n                                            height=\"65\"\n                                        />\n                                        <div className=\"mt-3\">\n                                            <h4>{user.name}</h4>\n                                            <p className=\"text-secondary mb-1\">\n                                                {user.profession.name}\n                                            </p>\n                                            <div className=\"text-muted\">\n                                                <i\n                                                    className=\"bi bi-caret-down-fill text-primary\"\n                                                    role=\"button\"\n                                                ></i>\n                                                <i\n                                                    className=\"bi bi-caret-up text-secondary\"\n                                                    role=\"button\"\n                                                ></i>\n                                                <span className=\"ms-2\">\n                                                    {user.rate}\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card mb-3\">\n                                <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                                    <h5 className=\"card-title\">\n                                        <span>Качества</span>\n                                    </h5>\n                                    <p className=\"card-text\">\n                                        {\" \"}\n                                        <Qualities qualities={user.qualities} />\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"card mb-3\">\n                                <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                                    <h5 className=\"card-title\">\n                                        <span>Completed meetings</span>\n                                    </h5>\n\n                                    <h1 className=\"display-1\">\n                                        {user.completedMeetings}\n                                    </h1>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <CommentsList userId={user._id} />{\" \"}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: { path: \"profession.name\", name: \"Профессия\" },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        },\n        delete: {\n            component: (user) => (\n                <button\n                    onClick={() => onDelete(user._id)}\n                    className=\"btn btn-danger\"\n                >\n                    delete\n                </button>\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport api from \"../../../api\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nconst UsersListPage = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfession] = useState();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const [users, setUsers] = useState();\n    useEffect(() => {\n        api.users.fetchAll().then((data) => setUsers(data));\n    }, []);\n    const handleDelete = (userId) => {\n        setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        setUsers(newArray);\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n        const filteredUsers = searchQuery\n            ? users.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? users.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : users;\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {\" \"}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <input\n                        type=\"text\"\n                        name=\"searchQuery\"\n                        placeholder=\"Search...\"\n                        onChange={handleSearchQuery}\n                        value={searchQuery}\n                    />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nconst Users = () => {\n    const params = useParams();\n    const { userId } = params;\n    return <>{userId ? <UserPage userId={userId} /> : <UsersListPage />}</>;\n};\n\nexport default Users;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport api from \"../../../api\";\r\nimport TextField from \"../../common/form/textField\";\r\nimport SelectField from \"../../common/form/selectField\";\r\nimport RadioField from \"../../common/form/radioField\";\r\nimport MultiSelectField from \"../../common/form/multiSelectField\";\r\nimport BackHistoryButton from \"../../backButton\";\r\n\r\nconst EditUserPage = () => {\r\n    const { userId } = useParams();\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        profession: \"\",\r\n        sex: \"male\",\r\n        qualities: []\r\n    });\r\n    const [professions, setProfession] = useState([]);\r\n    const [qualities, setQualities] = useState([]);\r\n    const [errors, setErrors] = useState({});\r\n    const getProfessionById = (id) => {\r\n        for (const prof of professions) {\r\n            if (prof.value === id) {\r\n                return { _id: prof.value, name: prof.label };\r\n            }\r\n        }\r\n    };\r\n    const getQualities = (elements) => {\r\n        const qualitiesArray = [];\r\n        for (const elem of elements) {\r\n            for (const quality in qualities) {\r\n                if (elem.value === qualities[quality].value) {\r\n                    qualitiesArray.push({\r\n                        _id: qualities[quality].value,\r\n                        name: qualities[quality].label,\r\n                        color: qualities[quality].color\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return qualitiesArray;\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const { profession, qualities } = data;\r\n        api.users\r\n            .update(userId, {\r\n                ...data,\r\n                profession: getProfessionById(profession),\r\n                qualities: getQualities(qualities)\r\n            })\r\n            .then((data) => history.push(`/users/${data._id}`));\r\n        console.log({\r\n            ...data,\r\n            profession: getProfessionById(profession),\r\n            qualities: getQualities(qualities)\r\n        });\r\n    };\r\n    const transformData = (data) => {\r\n        return data.map((qual) => ({ label: qual.name, value: qual._id }));\r\n    };\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        api.users.getById(userId).then(({ profession, qualities, ...data }) =>\r\n            setData((prevState) => ({\r\n                ...prevState,\r\n                ...data,\r\n                qualities: transformData(qualities),\r\n                profession: profession._id\r\n            }))\r\n        );\r\n        api.professions.fetchAll().then((data) => {\r\n            const professionsList = Object.keys(data).map((professionName) => ({\r\n                label: data[professionName].name,\r\n                value: data[professionName]._id\r\n            }));\r\n            setProfession(professionsList);\r\n        });\r\n        api.qualities.fetchAll().then((data) => {\r\n            const qualitiesList = Object.keys(data).map((optionName) => ({\r\n                value: data[optionName]._id,\r\n                label: data[optionName].name,\r\n                color: data[optionName].color\r\n            }));\r\n            setQualities(qualitiesList);\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (data._id) setIsLoading(false);\r\n    }, [data]);\r\n\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        name: {\r\n            isRequired: {\r\n                message: \"Введите ваше имя\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <BackHistoryButton />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    {!isLoading && Object.keys(professions).length > 0 ? (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Имя\"\r\n                                name=\"name\"\r\n                                value={data.name}\r\n                                onChange={handleChange}\r\n                                error={errors.name}\r\n                            />\r\n                            <TextField\r\n                                label=\"Электронная почта\"\r\n                                name=\"email\"\r\n                                value={data.email}\r\n                                onChange={handleChange}\r\n                                error={errors.email}\r\n                            />\r\n                            <SelectField\r\n                                label=\"Выбери свою профессию\"\r\n                                defaultOption=\"Choose...\"\r\n                                options={professions}\r\n                                name=\"profession\"\r\n                                onChange={handleChange}\r\n                                value={data.profession}\r\n                                error={errors.profession}\r\n                            />\r\n                            <RadioField\r\n                                options={[\r\n                                    { name: \"Male\", value: \"male\" },\r\n                                    { name: \"Female\", value: \"female\" },\r\n                                    { name: \"Other\", value: \"other\" }\r\n                                ]}\r\n                                value={data.sex}\r\n                                name=\"sex\"\r\n                                onChange={handleChange}\r\n                                label=\"Выберите ваш пол\"\r\n                            />\r\n                            <MultiSelectField\r\n                                defaultValue={data.qualities}\r\n                                options={qualities}\r\n                                onChange={handleChange}\r\n                                name=\"qualities\"\r\n                                label=\"Выберите ваши качества\"\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={!isValid}\r\n                                className=\"btn btn-primary w-100 mx-auto\"\r\n                            >\r\n                                Обновить\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        \"Loading...\"\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditUserPage;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport api from \"../../api\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst RegisterForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: [],\n        licence: false\n    });\n    const [qualities, setQualities] = useState([]);\n    const [professions, setProfession] = useState([]);\n    const [errors, setErrors] = useState({});\n\n    const getProfessionById = (id) => {\n        for (const prof of professions) {\n            if (prof.value === id) {\n                return { _id: prof.value, name: prof.label };\n            }\n        }\n    };\n    const getQualities = (elements) => {\n        const qualitiesArray = [];\n        for (const elem of elements) {\n            for (const quality in qualities) {\n                if (elem.value === qualities[quality].value) {\n                    qualitiesArray.push({\n                        _id: qualities[quality].value,\n                        name: qualities[quality].label,\n                        color: qualities[quality].color\n                    });\n                }\n            }\n        }\n        return qualitiesArray;\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => {\n            const professionsList = Object.keys(data).map((professionName) => ({\n                label: data[professionName].name,\n                value: data[professionName]._id\n            }));\n            setProfession(professionsList);\n        });\n        api.qualities.fetchAll().then((data) => {\n            const qualitiesList = Object.keys(data).map((optionName) => ({\n                value: data[optionName]._id,\n                label: data[optionName].name,\n                color: data[optionName].color\n            }));\n            setQualities(qualitiesList);\n        });\n    }, []);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n        console.log({\n            ...data,\n            profession: getProfessionById(profession),\n            qualities: getQualities(qualities)\n        });\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professions}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualities}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst Main = () => {\n    return <h1> Main Page</h1>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst NavBar = () => {\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\n                    Login\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Users from \"./layouts/users\";\nimport EditUserPage from \"./components/page/editUserPage/editUserPage\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\n\nfunction App() {\n    return (\n        <div>\n            <NavBar />\n            <Switch>\n                <Route path=\"/users/:userId/:edit\" component={EditUserPage} />\n                <Route path=\"/users/:userId?\" component={Users} />\n                <Route path=\"/login/:type?\" component={Login} />\n                <Route path=\"/\" exact component={Main} />\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}